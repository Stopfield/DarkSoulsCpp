@startuml
class Player {
    - name : string
    - health : double
    - stamina : double
    - strength : double
    - guarding : bool
    - equipedWeapon : Weapon*
    - numPlayers: uint
    - inventory: pair< Item, short >*
    - inventorySize: size_t
    - inventoryIndex: size_t

    - NAME_MAX_STR : const size_t 
    - ITEM_MAX_STACK: const size_t
    - INVENTORY_MIN_SIZE: const static size_t
    - INVENTORY_REALLOC_RATE: const static float constexpr


    + Player()
    + Player( name: string, health: double, stamina: double, strength: double )
    + Player(const Player& other)
    + ~Player()

    + equipWeapon( Weapon& )
    + attack( Enemy& )
    + guard()
    + grabItem()
    + move()
    + bool isUnarmed()
    + bool isGuarding()

    - void allocateInventorySpace();
    - std::pair<Item, short>* copyInventory( std::pair<Item, short>* , size_t);
    - Weapon* copyWeapon( const Weapon* );

}

class Enemy {
    - name : string
    - health : double
    - stamina : double
    - strength : double
    - guarding : bool
    - equipedWeapon : Weapon*
    - NAME_MAX_STR : const size_t 
    
    + Enemy()
    + Enemy( name: string, health: double, stamina: double, strength: double )
    + Enemy(const Player& other)
    + ~Enemy()

    + equipWeapon( Weapon& )
    + guard()
    + bool isUnarmed()

}

class Weapon {
    - name: string
    - damage: double
    - durability: int
    - NAME_MAX_SIZE: const size_t

    + Weapon()
    + Weapon(name: string, damage: double, durability: int)
    + Weapon(const Weapon&)
    + ~Weapon()

    + inflictDamage( Enemy& )
    + printStatus() const
}

Weapon --o Player
Weapon --o Enemy
Enemy o-- Player
@enduml